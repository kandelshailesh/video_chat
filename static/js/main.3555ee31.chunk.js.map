{"version":3,"sources":["Video_Footer.js","Video_Sidebar.js","Video.js","App.js","serviceWorker.js","index.js"],"names":["Video_Footer","className","fontSize","mode","index","src","Video_Sidebar","useState","liked","setliked","style","display","placeContent","backgroundColor","marginTop","marginLeft","zIndex","position","width","height","borderRadius","color","fontWeight","onClick","Video","video_ref","useRef","playing","setplaying","current","pause","play","ref","loop","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mTAsCeA,EAlCM,WACnB,OAEI,yBAAKC,UAAU,iBACrB,yBAAKA,UAAW,qBACZ,gDACA,6CAGA,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACnB,kBAAC,IAAD,CAAWA,UAAU,eAAeC,SAAS,aAE7C,kBAAC,IAAD,CAAQD,UAAU,SAAUE,KAAK,WAC5B,cAAEC,MAAF,OACG,oCACA,kDASZ,yBAAKH,UAAU,gBACf,yBAAMA,UAAW,aAAaI,IAAI,6E,0DCYnBC,EAlCO,WAAO,IAAD,EAEDC,oBAAS,GAFR,mBAEpBC,EAFoB,KAEbC,EAFa,KAG1B,OACD,yBAAKR,UAAU,kBACT,yBAAKA,UAAU,0BACjB,yBAAKA,UAAU,mBACpB,yBAAMA,UAAW,cAAcI,IAAI,2EAEnC,yBAAKK,MAAO,CAACC,QAAQ,OAAOC,aAAa,SAASC,gBAAgB,oBAAoBC,WAAW,GAAGC,WAAW,GAAGC,OAAO,IAAMC,SAAS,WAAWC,MAAM,GAAGC,OAAO,GAAGC,aAAa,QACnL,2BAAOV,MAAO,CAACW,MAAM,QAAQnB,SAAS,GAAGoB,WAAW,SAApD,OAIK,yBAAKrB,UAAU,0BACnBO,EACD,kBAAC,IAAD,CAAOa,MAAM,QAAQE,QAAW,kBAAKd,GAAS,IAAQP,SAAS,QAAQD,UAAU,yBAAgC,kBAAC,IAAD,CAAOC,SAAS,QAAQqB,QAAW,kBAAKd,GAAS,IAAQR,UAAU,yBAEpL,2BAAIO,EAAQ,IAAO,MAEnB,yBAAKP,UAAU,0BACf,kBAAC,IAAD,CAASC,SAAS,QAAQD,UAAU,yBACpC,mCAEA,yBAAKA,UAAU,0BACf,kBAAC,IAAD,CAAOC,SAAS,QAAQD,UAAU,yBAClC,qCCDeuB,EA3BD,WACZ,IAAMC,EAAWC,iBAAO,MADN,EAEUnB,oBAAS,GAFnB,mBAEboB,EAFa,KAEJC,EAFI,KAgBlB,OACE,yBAAK3B,UAAU,SAEb,2BAAOsB,QAhBM,WAEZI,GAECF,EAAUI,QAAQC,QAClBF,GAAW,KAIXH,EAAUI,QAAQE,OAClBH,GAAW,KAMeI,IAAKP,EAAWxB,UAAU,gBAAiBgC,MAAI,EAAC5B,IAAI,uBAAuB6B,IAAI,WAC5G,kBAAC,EAAD,MACA,kBAAC,EAAD,QCVUC,G,MAZH,WAER,OAAQ,yBAAKlC,UAAU,OACnB,yBAAKA,UAAU,eACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,UCAQmC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.3555ee31.chunk.js","sourcesContent":["import React from 'react';\r\nimport MusicIcon from  '@material-ui/icons/MusicNote';\r\nimport Ticker from 'react-ticker';\r\n\r\nconst Video_Footer = () => {\r\n  return (\r\n\r\n      <div className=\"video__footer\" >\r\n<div className =\"video__footertext\">\r\n    <h5>@Shailesh Kandel</h5>\r\n    <p>\r\n       What's up Guys\r\n    </p>\r\n    <div className=\"footer__ticker\">\r\n        <div className=\"footer_icon_div\">\r\n    <MusicIcon className=\"footer__icon\" fontSize=\"inherit\"></MusicIcon>\r\n    </div>\r\n    <Ticker className=\"ticker\"  mode=\"smooth\">\r\n        {({index})=>(\r\n            <>\r\n            <p>Hello how r u</p>\r\n            </>\r\n        )\r\n\r\n        }\r\n    </Ticker>\r\n    \r\n</div>\r\n</div>\r\n<div className=\"spinning_div\">\r\n<img  className= \"footer_img\" src=\"https://www.tiktok.com/api/img/?itemId=6854800457374633221&location=0\"></img>\r\n</div>\r\n\r\n</div>\r\n\r\n  )\r\n}\r\n\r\nexport default Video_Footer\r\n","import React,{useState} from 'react';\r\nimport './video_sidebar.css';\r\nimport Heart from '@material-ui/icons/Favorite';\r\nimport Comment from '@material-ui/icons/Comment';\r\nimport Share from '@material-ui/icons/Share';\r\n\r\n\r\n\r\nconst Video_Sidebar = () => {\r\n\r\n const [liked, setliked] = useState(false)\r\n  return (\r\n <div className=\"video__sidebar\">\r\n       <div className=\"video__sidebar__option\">\r\n     <div className=\"sidebar_img_div\">\r\n<img  className= \"sidebar_img\" src=\"https://www.tiktok.com/api/img/?itemId=6854800457374633221&location=0\"></img>\r\n</div>\r\n<div style={{display:'grid',placeContent:'center',backgroundColor:'rgba(255,0,0,0.8)',marginTop:-10,marginLeft:10,zIndex:20000,position:'absolute',width:15,height:15,borderRadius:\"50%\"}}>\r\n<label style={{color:'white',fontSize:13,fontWeight:'bold'}}>+</label>\r\n</div>\r\n</div>\r\n\r\n     <div className=\"video__sidebar__option\">\r\n{liked ?\r\n<Heart color=\"error\" onClick = {()=> setliked(false)} fontSize=\"large\" className=\"video__sidebar__icon\"></Heart>:<Heart fontSize=\"large\" onClick = {()=> setliked(true)}  className=\"video__sidebar__icon\"></Heart>\r\n}\r\n<p>{liked ? 123+1 :123}</p>\r\n</div>\r\n<div className=\"video__sidebar__option\">\r\n<Comment fontSize=\"large\" className=\"video__sidebar__icon\"></Comment>\r\n<p>120</p>\r\n</div>\r\n<div className=\"video__sidebar__option\">\r\n<Share fontSize=\"large\" className=\"video__sidebar__icon\"></Share>\r\n<p>120</p>\r\n\r\n</div>\r\n\r\n </div>\r\n  )\r\n}\r\n\r\nexport default Video_Sidebar\r\n","import React,{useRef,useState} from 'react';\r\nimport './Video.css';\r\nimport Video_Footer from './Video_Footer';\r\nimport Video_Sidebar from './Video_Sidebar';\r\n\r\n\r\nconst Video = () => {\r\n  const video_ref= useRef(null);\r\nconst [playing, setplaying] = useState(false)\r\nconst videoPress = () =>\r\n{\r\n    if(playing)\r\n    {\r\n        video_ref.current.pause();\r\n        setplaying(false);\r\n    }\r\n    else\r\n    {\r\n        video_ref.current.play();\r\n        setplaying(true);\r\n    }\r\n}\r\n  return (\r\n    <div className=\"video\">\r\n\r\n      <video onClick={videoPress} ref={video_ref} className=\"video__player\"  loop src=\"/mercy-education.mp4\" alt=\"hello \"></video>\r\n     <Video_Sidebar></Video_Sidebar>\r\n     <Video_Footer></Video_Footer>\r\n     \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Video\r\n","import React from 'react';\r\nimport Video from './Video';\r\nimport './App.css'\r\n\r\n\r\nconst App = () =>\r\n{\r\n    return (<div className=\"app\">\r\n        <div className=\"app__videos\">\r\n            <Video></Video>\r\n            <Video></Video>\r\n            <Video></Video>\r\n            <Video></Video>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}